* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

header,
footer {
	text-align: center;
	color: #fff;
	background-color: cadetblue;
	height: 80px;
}

/*
	section_name: le podemos definir margenes o espaciados
	cuando queremos separar esta seccion de otra 
*/
.section_name {
	padding: 50px 0;

	/*
	container_name: es el encargado de manejar el 
	responsive a travez de la propiedad width
	*/
	.container_name {
		margin: 0 auto;
		// background-color: aqua;

		/*
			@query 899px <== : modificamos el width de
			container_name para esta medida
		*/
		@media (min-width: 899px) {
			width: 95%;
		}

		/*
			@query 900px ==> : modificamos el width de
			container_name para esta medida
		*/
		@media (min-width: 900px) {
			width: 80%;
		}

		/*
			box_boid: es importante definir un height a este contenedor
			para que genere el espaciado que nos ayuda a solucionar 
			el problema de desmaquetado, el valor de este depende de
			la posicion inicial de la targeta
		*/
		.box_boid {
			background-color: orange;
			height: 100px;
		}

		/*
			flexbox_name: definimos position: relative para 
			solucionar el problema que genera definir absolute
			en un elemento hijo, finalmente implementamos
			flexbox con su propeidad justify-content que nos 
			permite centrar las cajas box_name y box_name_img
			horizontalmente
		*/
		.flexbox_name {
			position: relative;
			display: flex;
			justify-content: center;

			/*
				box_name: definimos position: absolute con su
				propiedad top que nos permiten posicionar la
				caja, tambien definimos flexbox y su 
				propiedad align-items que nos permite centrar 
				su contenido verticalmente. Finalmente un width 
				que nos ayuda a darle tamaño a esta caja
			*/
			.box_name {
				position: absolute;
				top: -100px;
				display: flex;
				align-items: center;
				background-color: darkcyan;
				width: 80%;

				/*
					@query 700px ==> : modificamos el width de
					box_name en esta medida responsive
				*/
				@media (min-width: 700px) {
					width: 70%;
				}

				/*
					content_info
				*/
				.content_info {
					text-align: center;
					// background-color: cornflowerblue;
					color: #fff;
					padding: 20px 40px;

					p {
						letter-spacing: 1.2px;
						line-height: 1.2;
						margin-top: 20px;
					}
				}
			}

			/*
				box_name_img: es importante definirle a un contenedor
				la propiedad height si este contiene dentro una tag-img
				para luego ajustar la imagen al tamaño del contenedor
			*/
			.box_name_img {
				height: 400px;

				/*
					@query 900px ==> : cambiamos el height del contenedor
					box_name_img
				*/
				@media (min-width: 900px) {
					height: 500px;
				}

				/*
					tag-img: es importante definir el width y height 
					de la img a 100% y object-fit: cover para que esta 
					se ajuste al tamaño de su contenedor
				*/
				img {
					width: 100%;
					height: 100%;
					object-fit: cover;
				}
			}
		}
	}
}
